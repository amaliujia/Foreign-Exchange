Background
The recent advances in life sciences and technology have started
to produce a large amount of data in an extremely fast and costefficient
way which requires the development of new
algorithms, coupled with massively parallel computing.
Besides, biologists are usually non-programmers, thus
demanding intuitive computer applications that are easy to use
by means of a friendly GUI. Several tools have been generated
over the past decade in order to deal with the data generation
but very little in integrating the tools and making biologist
friendly interfaces. It is therefore of paramount importance to
overcome such limitations, so that bioinformatics becomes
much more widely used amongst biologists. Web based
interfaces are good and popular as a biologist next to having a
pipette and a pen, can access web browser and perform
required analysis in a easy to use way. The main goal of our
project was to unify some of these existing bioinformatics
applications and in one easy-to-use environment, independent
of the computing platform, being a concentrator resource tool
with a friendly interface allowing intuitive bioinformatics tool
usage. Our platform BioParisodhana is a graphical interface
integrating BLAST, ClustalW, Primer3 and restriction digestion
tools allowing even a non-programmer laboratory scientists to
chain different processes into workflows and customize them
without code writing.

Implementation
Architecture:
We divide the task in three developmental phases and
primarily use standalone versions of our chosen tools; BioPERL,
PERL and CGI-PERL for achieving our goal  (see
supplementary material).

Input Phase:
The first step in interlinking the tools is to make the input and
output file formats compatible throughout. The input can be
given in any of the following three formats: Upload, Paste and
Accession or ID number. For any given input Bio::SeqIO
module from BioPERL [] was standardized to convert to
FASTA format  (see supplementary material).

Process Phase:
BLAST [], ClustalW 
[], Primer3 
[] and a common restriction
digestion tools were chosen for integration using perl coding.
Of the 4 tools only BLAST requires database storage, to avoid
data storage issues we use chose RemoteBlast 
 (see
supplementary material). For restriction digestion tool bioperl
module Bio:Restriction:Analysis is implemented 
 (see
supplementary material).

Integration Phase:
A web interface () is created which serves to multiple
users simultaneously, avoiding clashes in multiple queries and
results. To achieve this, a random number is generated when
the server receives the first request or home.cgi is accessed. This
number becomes the unique id of the user till the session lasts
and differentiates the individual users and creates a file with its
reference for the user. The interlinking of the tools was done
using PERL programs. We use CGI-PERl for achieving this task.

Discussion
Restriction enzyme analysis and intuitional use of other tools:
As seen in the (), the input sequence will be taken in
the work area and required parameters which can be selected
by the user are seen on the left side menu. For example, upon
selecting the Sticky ends, a list of enzymes will be generated in
the next screen () and user can select the required
enzymes and submit. This will generate a list fragments and
their sizes with the sequence information (). This step
can also give the user to go for specific fragment selection for
primer design or further restriction digestion or perform BLAST
analysis or also see if these two sequences can share any
homology be performing ClustalW. The user can also download
the sequences in the fasta format. Primer design and
collaborative tools: The input sequence can be used for primer
design and also a combinational analysis.  shows the
sequence and parameters which can be used for designing the
primers () and furthermore, all the sequences can be
used to perform further BLAST, ClastalW and any other
analysis needed. BLAST analysis with extended analytical
capabilities: () show how BLAST tool can be
used and in collaborative way with ClastalW. However, as it
can be seen in (), apart from ClastalW, there are other
tools like Primer design and restriction digestion can be
performed on each of the hit and thus allowing the user to
implement novel ideas and generate better hypothesis and
analysis for their research. Some of the earlier tools like
BioExtract [] Discovery Net 
[] and in GAP 
[], where the tools
exist as individual tools and work flows can be created by the
users have provided lot of help. We believe that BioParisodhana
platform can give the much needed simpler and easier
approaches for biologists to use the tools and analyze the data
without having to download, learn and use the tools.

Requirements
Project name: BioParishodhana; Project home page:
http://resource.ibab.ac.in/bioparishodhana.html; Operating
system(s): Linux; any restrictions to use by non-academics: none

Supplementary material
Data 1
This work was supported by Department of Information
Technology, Government of India to Institute of Bioinformatics
and Applied Biotechnology (IBAB), Bangalore, India. Authors
also thank faculty at IBAB who have supported and helped
during the project.

Citation:Vangala et al, Bioinformation 8(13): 638-644 (2012)

Front page for the user where a sequence data can be uploaded as a file or cut and paste or give the accession number/ID

(a) After uploading the sequence, all the options will appear on the left side of the screen and main work area will have
the input sequence. For example, restriction enzyme analysis of DNA; (b) The user will see a screen with all the required options on
the left side and sequence in the work area; (c) The next screen will give all the restriction enzymes (depending on the selection
made by the user: Sticky ends, Blunt ends or All), for example, sticky ends were selected. In this screen the user can select specific
enzymes to cut with; (d) Depending on the selection of the enzymes, the digested fragments will be shown in the work area and all
the options will be shown in the left part of the screen.

(a) In case of primer design, the required parameters will be shown after the input and sequence in the work area; (b)
After identifying the primers the results will be displayed and all the other options which can be performed with the results.

(a) The same sequence can be used for T-BLAST analysis and all the parameters will appear on the left hand side of the
screen and sequence in the work area; (b) After selecting the parameters, the result of the BLAST will be shown and the user can
perform the ClustallW to generate the family of the sequences or domain identification. Other options like primer design and
restriction enzyme analysis can be performed for single sequence selected or multiple sequences from this output; (c) For further
analysis, example, ClustalW, the results will be displayed as shown above and can be downloaded in different formats.

