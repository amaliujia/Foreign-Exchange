Introduction
High throughput sequencing (NGS) techniques have brought a remarkable revolution in the field of biology and other closely related fields and have shaped a new trend of how modern biological research can be done at a large scale level. With the advances of these techniques, it is feasible nowadays to scan and sequence a whole genome or exome at a base pair level at a low error rate, in an acceptable time frame and at a lower cost.

Based on the first Sanger sequencing technique, the Human Genome Project (1990–2003), allowed the release of the first human reference genome by determining the sequence of ~3 billion base pairs and identifying the approximately ~25,000 human genes [-]. That stood as a great breakthrough in the field of comparative genomics and genetics as one could in theory directly compare any healthy or non-healthy sample against a golden standard reference and detect genetic polymorphisms or variants that occur in a genome. Few years later, as sequencing techniques became more advanced, more accurate and less expensive, the 1000 Human Genome Project[] was launched (January 2008). The main scope of this consortium is to sequence, ~1000 anonymous participants of different nationalities and concurrently compare these sequences to each other in order to better understand human genetic variation. Recently, as a result of the project, 1092 such human genomes were sequenced and published []. The International HapMap Project (short for “haplotype map”) [-] aims to identify common genetic variations among people and is currently making use of data from six different countries.

Shortly after the 1000 Human Genome Project, the 1000 Plant Genome Project (http://www.onekp.com) was launched, aiming to sequence and define the transcriptome of ~1000 plant species from different populations around the world. Notably, out of the 370,000 green plants that are known today, only ~125,000 species have recorded gene entries in GenBank and many others still remain unclassified []. While the 1000 Plant Genome Project was focused on comparing different plant species around the world, within the 1001 Genomes Project[], 1000 whole genomes of A. Thaliana plants across different places of the planet were sequenced.

Similar to other consortiums, the 10,000 Genome Project[] aims to create a collection of tissue and DNA specimens for 10,000 vertebrate species specifically designated for whole-genome sequencing. In addition, the overarching goal of the 1000 Fungal Genome Project (F1000 - http://1000.fungalgenomes.org) is to explore all areas of fungal biology by providing broad, genomic coverage of Kingdom Fungi. Notably, sequencing advances have paved the way to metagenome sequencing, which is defined as an approach for the study of microbial populations in a sample representing a community by analysing the nucleotide sequence content. Moreover, NGS will allow for the accurate detection of pan-genomes which describe the full complement of a superset of all the genes in all the strains of a species, typically applied to bacteria and archaea [].

In the near future, sequencing techniques are expected to become even less time-consuming and more cost-effective in order to screen whole genomes within a few hours or even minutes. While sequencing techniques improve and develop overtime, the amount of data produced increases exponentially and therefore the implementation of efficient platforms to analyze and visualize such large amounts of data in fast and efficient ways has become a necessity. Following a top-down approach, the current review starts with an overview of generic visualization and analysis tools and file formats that can be used in any next generation sequencing analysis. While such tools are of a broad usage, the current review progressively focuses on their application in structural variation detection and representation and in parallel, commenting on their strengths and weaknesses, giving insights on how they could further develop to handle the overload of information and cope with the data complexity. It is not the scope of this article to describe in depth the existing sequencing techniques, but readers are strongly encouraged to follow a more detailed description about the widely used sequencing technologies in [,]. Thorough explanations of how hundreds of thousands or even millions of sequences can be generated by such high-throughput techniques is presented in [,] while sequence assembly strategies are extensively explained in []. The advantages and the limitations of the aforementioned techniques are discussed in [,].

Sequencing technologies
First, second and third generation
Sequencing techniques are chronologically divided into 3 generations: the first, the second and the third. The key principle of the first generation (Sanger or dideoxy) sequencing techniques, which was discovered in 1977, was the use of dideoxy nucleotide triphosphates (ddNTPs) as DNA chain terminators so that the labeled fragments could be separated by size using gel electrophoresis. Dye-terminator sequencing discovered in the late 90s, utilizes labeling in a single reaction, instead of four reactions (A,T,C,G). In dye-terminator sequencing, each of the four ddNTPs is labeled with fluorescent dyes, each of which emits light at different wavelengths. Dye-terminator sequencing combined with capillary electrophoresis succeeded in speeding up performance and became one of the most standardized and widely used techniques.

Second generation high-throughput sequencing techniques generate thousands or millions of short sequences (reads) at higher speed and better accuracy. Such sequencing approaches can immediately be applied in relevant medical areas where previous Sanger-based trials fell short in capturing the desired sequencing depth in a manageable time-scale []. High-throughput second generation commercial technologies have already been developed by Illumina [,], Roche 454 [] and Biosystems/SOLiD. Today Illumina is the most widely used platform despite its lower multiplexing capability of samples allowed []. Recent HiSeq Illumina systems make it possible for researchers to perform large and complex sequencing studies at a lower cost. Cutting-edge innovations can dramatically increase the number of reads, sequence output and data generation rate. Thus, researchers are now able to sequence more than five human genomes at ~30x coverage simultaneously or ~100 exome samples in a single run.

Helicos BioSciences (http://www.helicosbio.com/), Pacific Biosciences (http://www.pacificbiosciences.com/), Oxford Nanopore (http://www.nanoporetech.com/) and Complete Genomics (http://www.completegenomics.com/) belong to the third generation of sequencing techniques, each of which have their pros and cons [,,]. These techniques are promising to sequence a human genome at a very low cost within a matter of hours.

While today, first generation sequencing is not used due to its forbidden cost and time consumption, second generation sequencing technologies are widely used due to their lower cost and time efficiency. Such techniques have led to a plethora of applications such as DNA-seq and assembly to determine an unknown genome from scratch or look for variations among genome samples, RNA-seq [,] to analyse gene expression or ChIP-seq [] to mainly identify DNA regions that are binding sites for proteins, such as transcription factors. It is not the scope of this review to describe the aforementioned techniques into depth but we give a short description of DNA sequencing and assembly and we explain below how this can be used to discover structural variations.

DNA sequencing and assembly
DNA sequencing can be applied to very long pieces of DNA such as whole chromosomes or whole genomes, but also on targeted regions such as the exome or a selection of genes pulled-down from assays or in solution. There are two different scenarios under which DNA sequencing is carried out. In the first case a reference genome for the organism of interest already exists, whereas in the second case of de novo sequencing, there is no reference sequence available. The main idea behind the reference genome approach consists of 3 general steps: Firstly, DNA molecules are broken down into smaller fragments at random positions by using restriction enzymes or mechanical forces. Secondly, a sequencing library consisting of such fragments of known insert size is created, while during a third step, these fragments are sequenced and finally mapped back to an already known reference sequence. The general methodology is widely known as shotgun sequencing. The aforementioned process is depicted in Figure . In the case of de novo sequencing, where there is no a priory catalogued reference sequence for the given organism, the small sequenced fragments are assembled into contigs (groups of overlapping, contiguous fragments) and the consensus sequence is finally established from these contigs. This process is often compared to putting together the pieces of a jigsaw puzzle. Thus, the short DNA fragments produced are assembled electronically into one long and contiguous sequence. No prior knowledge about the original sequence is needed. While short read technologies produce higher coverage, longer reads are easier to process computationally and interpret analytically, as they are faster to align compared to short reads because they have higher significant probabilities to align to unique locations on a genome. Notable tools for sequence assembly are the: Celera [], Atlas [], Arachne [], JAZZ [], PCAP [], ABySS [], Velvet [] and Phusion []. The accuracy of this approach increases when comparing larger sized fragments (resulting in larger overlaps) of less repetitive DNA molecules. For larger genomes, this method has many limitations mainly due to the smaller size of reads and its high cost. The aforementioned process is displayed in Figure .

DNA sequencing.DNA sequencing: 1st step: The DNA of interest is purified and extracted. 2nd step: Creation of multiple copies of DNA. 3nd step: DNA is shattered into smaller pieces. 4rd step: DNA fragment sequencing. 5th step: A computer maps the small pieces to an already known reference genome.

DNA assembly.DNA assembly: 1st step: The DNA is purified and extracted. 2nd step: DNA is fragmented into smaller pieces. 3rd step: DNA fragment sequencing. 4th step: A computer matches the overlapping parts of the fragments to get a continuous sequence. 5th step: The whole sequence is reassembled. No prior knowledge about the DNA sequence is necessary.

The structural variome
A single nucleotide polymorphism (SNP), or equally a single nucleotide variation (SNV), refers to a single nucleotide change (adenine-A, thymine-T, guanine-G, and cytosine-C) in genomic DNA which is observed between members of the same biological species or paired chromosomes in a single individual. A SNP example is shown in Figure . SNPs are single nucleotide substitutions, which are mainly divided into two types: transitions (interchanges of two purines or two pyrimidines such as A-G or C-T) and transversions (interchanges between purines and pyrimidines A-T, A-C, G-T and G-C). There are multiple public databases which store information about SNPs. The National Center for Biotechnology Information (NCBI) has released dbSNP [], a public archive for genetic variation within and across different species. The Human Gene Mutation Database (HGMD) [] holds information about gene mutations associated with human inherited diseases and functional SNPs. The International HapMap Project (short for “haplotype map”) [-] holds information about genetic variations among people, so far from containing data from six countries. The data includes haplotypes (several SNPs that cluster together on a chromosome), their locations in the genome and their frequencies in different populations throughout the world. Other databases to be mentioned are the HGBASE [], HGVbase [], GWAS Central [] and SNPedia []. A great variety of tools to detect SNVs and predict their impact is analytically reviewed in [].

SNP example. A difference in a single nucleotide between two DNA fragments from different individuals. In this case we say that there are two alleles: C and T.

Recently, the focus has been shifted to understanding genetic differences in the form of short sequence fragments or structural rearrangements (rather than variation at the single nucleotide level). This type of variation is known as the structural variome. The structural variome refers to the set of structural genetic variations in populations of a single species that have been acquired in a relatively short time on an evolutionary scale. Structural variations are mainly separated in two categories; namely the balanced and the unbalanced variations. The basic variations include insertions, deletions, duplications, translocations and inversions. Balanced variations refer to genome rearrangements, which do not change the total content of the DNA. These are mainly inversions or intra/inter-chromosomal translocations. Unbalanced variations on the other hand, refer to rearrangements that change the total DNA content. These are insertions and deletions. Unbalanced variations are also called copy number variations (CNVs). Figure  shows a schematic representation of such intra/inter-chromosomal balanced and unbalanced structural variations.

Structural Variations. This figure illustrates the basic structural variations. A) Inversion. B) Translocation within the same chromosome. C) Translocation across different chromosomes. D) Duplication. E) Deletion.

Methods to detect structural variations
During the past years, a great effort has been made towards the development of several techniques [] and software applications [] to detect structural variations in genomes. In the case of SNP detection, the differences are extracted from local alignments whereas for the detection of structural variations approaches, such as read-pair (RP), read-depth (RD) and split-reads can be used.

Pair-end mapping (PEM)
According to this approach, the DNA is initially fragmented into smaller pieces. The two ends of each DNA fragment (paired end reads or mate pairs) are then sequenced and finally get mapped back to the reference sequence. Notably, the two ends of each read are long enough to allow for unique mapping back to the reference genome. The idea behind this strategy is that the ends of the reads, which align back to the reference genome, map back to specific positions of an expected distance according to information from stored DNA libraries. For certain cases, the mapping distance appears to be different from the expected length, or mapping displays an alternative orientation from that anticipated. These observations can be considered as strong indicators for the occurrence of a possible structural variation. Thus, if the mapped distance is smaller than the expected one, it could indicate a deletion or vice versa an insertion. The main difference between the terms paired end reads and mate pairs, is that while pair-end reads provide tighter insert sizes, the mate pairs give the advantage of larger insert sizes []. Differences and structural variations among genomes can be tracked by observing PEM signatures. While PEM signatures together with approaches to detect them are analytically described elsewhere [], some common signatures are shown in Figure .

PEM signatures. Basic PEM signatures. A) Insertion. B) Deletion. C) Inversion. More PEM signatures are visually presented in [].

Single-end
According to this methodology, multiple copies of a DNA molecule get produced and randomly chopped into smaller fragments (reads). These reads are eventually aligned and mapped back to a reference genome. The reasoning behind this approach is that various reads will map back to various positions across the genome, and exhibit significant overlap of read mapping. By measuring the frequency of nucleotides mapped by the reads across the depth of coverage (DOC), it is possible to obtain an evaluation of the number of reads that have been mapped to a specific genomic position (see Figure ). The Depth of coverage (DOC) is a significant way to detect insertions or deletions, gains or losses in a donor sample comparing to the reference genome. Thus, a region that has been deleted will have less reads mapped to it, and vice versa in cases of insertions. Similarly to PEM, the aforementioned methodology is an alternative way to extract information about possible structural variations described by DOC signatures. While read-depth has a higher resolution, it gives no information about the location of the variation and it can only detect unbalanced variations. DOC signatures, compared to PEM signatures are more suitable to detect larger events, since the stronger the event, the stronger the signal of the signature. On the other hand, PEM signatures are more suitable to detect smaller events, even with low coverage, but are far less efficient in localizing breakpoints. Available tools to detect structural variations and cluster them according to different methodologies are presented below.

Read depth. Read depth: A) Fragments of DNA (Reads) are mapped to the original reference genome. B) Plotting the frequency of each nucleotide that was mapped at the reference genome.

Split-reads
According to this approach, a read is mapped to two separate locations because of possible structural variation. The prefix and the suffix of a match may be interrupted by a longer gap. This split read mapping strategy is useful for small to medium-sized rearrangements in a base pair level resolution. It is suitable for mRNA sequencing, where absent intronic arrangements can cause junction reads that span exon-exon boundaries. Often, local assembly is used to detect regions of micro-homology or non-template sequences around a breakpoint. This is done to detect the actual sequence around the break points.

File formats
Sequencing techniques generate vast amounts of data that need to be efficiently stored, parsed and analyzed. A typical sequencing experiment might produce files ranging from few gigabytes to terabytes in size, containing thousands or millions of reads together with additional information such as read identifiers, descriptions, annotations, other meta-data, etc. Therefore, file formats such as FASTQ [], SAM/BAM [] or VCF [] have been introduced to efficiently store such information.

FASTQ
It comes as a simple extension of the FASTA format and it is widely used in DNA sequencing mainly due to its simplicity. Its main strength is its ability to store a numeric quality score (PHRED []) for every nucleotide in a sequence. FASTQ mainly consists of four lines. The first line starts with the symbol ‘@’ which is followed by the sequence identifier. The second line contains the whole sequence as a series of nucleotides in uppercase. Tabs or spaces are not permitted. The third line starts with the ‘+’ symbol which indicates the end of the sequence and the start of the quality string which follows in the 4th line. Often, the third line contains a repetition of the same identifier like in line 1. The quality string, which is shown in the 4th line, uses a subset of the ASCII printable character representation. Each character of the quality string corresponds to one nucleotide of the sequence; thus the two strings should have the same length. Encoding quality scores in ASCII format, makes FASTQ format easier to be edited. The range of printed ASCII characters to represent quality scores varies between different technologies. Sanger format accepts a PHRED quality score from 0 to 93 using ASCII 33 to 126. Illumina 1.0 encodes a Illumina quality score from −5 to 62 using ASCII 59 to 126. Illumina 1.3+ format can encode a PHRED quality score from 0 to 62 using ASCII 64 to 126. Using different ranges for every technology is often confusing, and therefore the Sanger version of the FASTQ format has found the broadest acceptance. Quality scores and how they are calculated per platform is described in []. A typical FASTQ file is shown in Figure . Compression algorithms such as [] and [] succeed in storing FASTQ using lower disk space. In order to interconvert files between Sanger, Illumina 1.3+ platforms, Biopython [], EMBOSS, BioPerl [] and BioRuby [] come with file conversion modules.

FASTQ file. 1st line always starts with the symbol ‘@’ followed by the sequence identifier. 2nd line contains the sequence. 3rd line starts with the symbol ‘+’ symbol which is optionally followed by the same sequence identifier and any description. It indicates the end of the sequence and the beginning of the quality score string. 4th line contains the quality score (QS) in ASCII format. The current example shows an Illumina representation.

Sequence alignment/Map (SAM) format
It describes a flexible and a generic way to store information about alignments against a reference sequence. It supports both short and long reads produced by different sequencing platforms. It is compact in size, efficient in random access and represents the format, which was mostly used by the 1000 Genomes Project to release alignments. It mainly supports 11 mandatory and many other optional fields. For better performance, store efficiency and intensive data processing, the BAM file, a binary representation of SAM, was implemented. BAM files are compressed in the BGZF format and hold the same information as SAM, while they require less disk space. SAM can be indexed and processed by specific tools. While Figure  shows an example of a SAM file, a very detailed description of the SAM and BAM files is presented in [].

BAM/SAM files. Example of an alignment to the reference sequence (pileup). A) Read r001/1 and r001/2 constitute a read pair; r003 is a chimeric read; r004 represents a split alignment. B) The corresponding SAM file and their tags for each field.

Variant call format (VCF)
This specific file type was initially introduced by the 1000 Genomes Project to store the most prevalent types of sequence variation, such as SNPs and small indels (inserions/deletions) enriched by annotations. VCFtools [] are equipped with numerous functionalities to process VCF files. Such functionalities include validations, merges and comparisons. An example of a VCF file is shown in Figure .

VCF file. This figure demonstrates an example of a CVF file. A) Different types of variations and polymorphisms that can be stored in CVF format. B) Example of a CVF format and its fields.

Variant calling pipelines
Variant discovery still remains a major challenge for sequencing experiments. Bioinformatics approaches that aim to detect variations across different human genomes, have identified 3–5 million variations for each individual compared to the reference. It is noticeable that most of the current comparative sequencing-based studies are mainly targeting the exome and not the whole genome, initially due to the lower cost. It is believed that variations in the exome can have a higher chance of having a functional impact in human diseases []. However, recent studies show that non-coding regions contain equally important disease related information []. Sophisticated tools that can cope with the large data size, efficiently analyze a whole genome or an exome and accurately detect genomic variations such as deletions, insertions, inversions or inter/intra chromosomal translocation are currently necessary. Today, only few of such tools exist and are summarized in Table . Many of the tools are error sensitive, as false negatives in base calling may lead to the identification of non-existent variants or to missing true variants in the sample, something that still remains a bottleneck in the field.

Software for predicting structural variations

Tool	Single-End	Pair-End	Reference genome	Insertion	Deletion	Inversion	Translocation across chromosomes	Translocation within chromosome	Properties	Input File	
BreakDancer []	 	X	 	X	X	X	X	X	• BreakDancerMax for large regions and BreakDancerMini for indels of 10-100 bp	BAM, SAM	
CNV-seq []	X	 	X	X	X	 	 	 	• Shotgun sequencing	Map locations from a BAM file (by SAM tools)	
• Robust statistical model	
GASV []	 	X	 	X	X	X	X	X	• Geometric approach	BAM	
• A SV is pictured as a polygon on a surface	
• Comparison of SVs across multiple samples	
HyDRa []	 	X	 	X	X	X	X	X	• SV breakpoints by clustering discordant paired-end alignments	Tab-delimiteddiscordant paired-end mappings	
MoDIL []	 	X	 	X	X	 	 	 	• Medium sized (10-50 bp) paired-end indels	Software specific	
• Able identify shorter heterozygous, as well as homozygous variants with higher accuracy	 	
MrFast []	X	 	 	X	X	 	 	 	• Short sequence reads (&gt;25 bp)	FASTA, FASTQ	
NovelSeq []	 	X	 	X	 	 	 	 	• Long novel sequence insertions	Software specific	
• Multiple types of variations	
PEMer []	 	X	 	X	X	X	X	X	• PEMer: variations	SVdB API	
• SV-Simulation: simulated paired-end reads	
• BreakDB: annotations	
Pindel []	 	X	X	X	X	 	 	 	• Large deletions (1 bp–10 kb)	BAM,SAM,FASTA, FASTQ	
• Medium sized insertions (1–20 bp) from 36 bp paired-end short reads	
rSW-seq []	X	 	X	X	X	 	 	 	• Based on an iterative Smith-Waterman dynamic sequence alignment method	Tab-delimited file denoting the tumor/normal status for each of aligned read positions	
VariationHunter []	 	X	 	X	X	X	 	 	• Evaluation of the entire possible mapping set of positions of each paired-end read and final mapping of the SVs interdependently.	Software specific	
VarScan [,]	X	 	X	X	X	 	 	 	• Germline variants (SNPs and indels) in individual samples or pools of samples.	Pileup, VCF	
• Shared and private variants in multi-sample datasets (with mpileup).	
• Somatic mutations, LOH events, and germline variants in tumor-normal pairs.	
 	 	 	 	 	 	 	 	 	• Somatic copy number alterations (CNAs) in tumor-normal exome data.	 	
Variant annotation
As genetic diseases can be caused by a variety of different possible mutations in DNA sequences, the detection of genetic variations that are associated to a specific disease of interest is very important. Even though most of the variations detected by variant callers are found to be functionally neutral [] and do not contribute to the phenotype of a disease [], many of them have concluded to important results. In order to better identify the causative variations for genetic disorders and characterize them, the implementation of efficient variant annotation tools emerges and is one of the most challenging aspects of the field. Table  summarizes the available software which serves this purpose by highlighting the strengths and the weaknesses of each application.

Variant annotators

Tool	Annotation	Data support	
Annotate-it []	SNPs, miRNA, Gene, Custom	OMIM, dbSNP, 200 Danish genomes, NHLBI Exomes, 1000 Genomes	
KGGSeq []	Indels, SNPs, Gene	dbSNP, 1000 Genomes	
ANNOVAR []	Indels, SNPs, miRNAs, Gene, Custom	dbSNP, NHLBI Exomes, 1000 Genomes	
Anntools []	Indels, SNPs, miRNAs, Gene, Custom	dbSNP, 1000 Genomes	
SeqAnt []	Indels, SNPs, Gene	dbSNP, 1000 Genomes	
SVA []	Indels, SNPs, Gene, Custom	OMIM, dbSNP, 1000 Genomes	
TREAT []	Indels, SNPs, Gene	OMIM, dbSNP, 1000 Genomes	
VAAST []	Indels, SNPs	-	
VarioWatch []	SNPs, Gene	OMIM, dbSNP, 1000 Genomes	
Var-MD []	SNPs	-	
VarSifter []	Indels, SNPs	-	
Visualization of structural variation
Visualization of high throughput data to provide meaningful views and make pattern extraction easier still remains a bottleneck in systems biology. More than ever, such applications represent a precious tool for biologists in order to allow them to directly visualize large scale data generated by sequencing. The vast amounts of data produced by deep sequencing can be impossible to analyze and visualize due to high storage, memory and screen size requirements. Therefore, the field of biological data visualization is an ever-expanding field that is required to address new tasks in order to cope with the increasing complexity of information. While a recent review [] discusses the perspectives and the challenges of visualization approaches in sequencing, the tables below emphasize on the strengths and the weaknesses of the available tools respectively.

Alignment tools
Aligning sequences of long length is not a trivial task. Therefore, efficient tools able to handle this load of data and provide intuitive layouts using linear or alternative representations i.e. circular are of importance. Table  shows a list of the widely used applications while also providing an overview of the strengths and weaknesses of each tool.

Alignment tools

Tool	Purpose	Properties	Support	Availability	
ABySS Explorer []	• Global sequence assemblies from smaller fragments of DNA	• de-Bruijn directed graphs	• DOT files []	• Java stand-alone application	
CLC Genomics workbench	• Analysis of de novo assembly	• SNP detection techniques	• Sanger, 454, Illumina and SOLID	• Commercial stand-alone application	
• genomic rearrangements structural variations	
EagleView []	• Large genome assemblies	• Multiple-line scheme	• Navigation by genomic location, read identifiers, annotations, descriptions, user-defined coordinate map	• Free stand-alone application	
Hawkeye []	• Detection of anomalies in data and visually identify and correct assembly errors	• Consensus validation of potential genes, dynamic filtering and automated clustering	• Compatibility with Phrap, ARACHNE [], Celera Assembler [] and others	• Free stand-alone application	
LookSeq []	• Visualization of sequences derived from multiple sequencing technologies	• Browsing at different resolutions	• SAM/BAM files	• Web applicastion	
• Read-depth coverage	
• Putative single nucleotide and SV	
MagicViewer []	• Assembly visualization and genetic variation annotation tool mainly developed to easily visualize short read mapping	• Identification and annotation of genetic variation based on the reference genome	• Multiple color schemes	• Pipeline to detect, filter, annotate visualize or classify by function genetic variations	
• Zoomable interface	
MapView []	• Alignments of huge-scale single-end and pair-end short reads	• Multiple navigation	• MapView formatted (MVF) files	• Free stand-alone application	
• Zooming modes	
• Multi-thread processing	
 	 	• Variation analysis	 	 	
Genome browsers
Genome browsers are mainly developed to display sequencing data and genome annotations from various data sources in one common graphical interface. Initially genome browsers were mainly developed to display assemblies of smaller genomes of specific organisms, but with the latest rapid technological innovations and sequencing improvements, it is essential today to be able to navigate through sequences of huge length, and simultaneously browse for genomic annotations and other known sources of information available for these sequences. While recent studies [-] try to review the overlaps and comment on the future of genome browsers, we focus on the most widely used ones and we comment on their usability and their strengths as shown in Table .

Genome browsers

Tool	Purpose	Properties	Support	Availability	
AnnoJ []	• Deep sequencing and other genome annotation data	• Implemented by users, to handle data and render it into a visible form.	• Web 2.0 application implemented in JavaScript	• Web 2.0 javascript application	
• Plugin architecture	
• Smooth navigation	
• Distribution of work between the server and the client with distant access through web services	
Argo	• Manual annotations of complete genomes	• ComBo comparative viewer to view dot plots of multiple aligned sequences	• FASTA, Genbank, GFF, BLAST, BED, Wiggle and Genscan files	• Stand-alone java application that can be launched as an applet or a java web start	
CGView []	• Static and interactive graphical maps of circular genomes using a circular layout	• Export of graphical maps in PNG, JPG or SVG formats	• Series of hyperlinked maps showing expanded views	Implemented in Java and it comes with its own API	
• XML formats	
• Generation of a series of hyperlinked maps showing expanded views	
Combo []	• Dynamic browser to visualize alignments of whole genomes and their associated annotations	• Use of a dot plot view	• Zoom in and out at various resolutions	• Stand-alone java application	
• Highlighted views of detailed information from specific alignments and annotations	• Its own file format	
Ensembl [,]	• Annotation, analysis and display of various genomes	• Optimized to serve thousands users per day and handling large amounts of data	• API for accessing and associating genome-scale data from different species across the taxonomy	• Web application	
GBrowse [,]	• Combination of databases and interactive web pages to manipulate and display genome annotations	• GBrowse_syn is an extension to show dot-plots for comparative genomics	• “rubber band” interface to allow faster zooming	• Component of the Generic Model Organism System Database Project (GMOD) []	
• HTML/Javascript	
Genome Projector []	• Circular genome maps, traditional genome maps, plasmid maps, biochemical pathways maps and DNA walks	• Limited to bacterial species with circular chromosomes	• Google Maps API to offer smoother navigation and better searching functionality	• Web application	
• It comes with its own API	
IGB []	• Optimized to achieve maximum flexibility and high quality genome visualization	• Visualization of tiling array data, NGS results, genome annotations, microarray designs and the sequence itself	• Rapid navigation through multiple zooming scales and across large regions of genomic sequence	• Stand-alone java application	
• Ability to handle huge datasets and diverse data sources and formats	
IGV []	• High-performance and ability to interactively explore and integrate large datasets	• Sequence alignments, microarrays, and genomic annotations	• Great variety of input file formats	• Standalone application	
• Integration of meta-data as heatmaps for deeper analysis	
UCSC Cancer Genomics Browser []	• Integration of clinical data	• Heatmaps	• Searching capabilities to find patterns in the huge amounts of clinical and genomic data that are gathered in large-scale cancer studies	• Web application	
• Boxplots	
• Proportions	
UCSC Genome Browser []	• Rapid linear visualization, examination, and querying of the data at many levels and it currently accommodates genomes of ~50 species	• Gene Sorter: expression, homology and other information among related groups of genes.	• Annotation datasets: mRNA alignments, mappings of DNA repeat elements, gene predictions, gene-expression data, disease-association data	• Genome Graphs for uploading and displaying genome-wide data sets	
• Blat: mapping any sequence to the genome while the Table Browser provides direct access to the underlying database.	
• VisiGene: browsing through a large collection of in situ mouse and frog images to examine expression patterns	
• Panning, zooming, and dragging capabilities increase the quality of interaction	
• Uploading a large variety of files	
• User specific customized sessions.	
X:map []	• Mappings between genomic features and Affymetrix microarrays	• Location of individual exon probes with respect to their target genes, transcripts and exons.	• Google Maps API to analyse and further visualize data through an associated BioConductor package	• Web application	
Visualization for comparative genomics
Comparative genomics is expected to be one of the main challenges of the next decade in bioinformatics research, mainly due to sequencing innovations that currently allow sequencing of whole genomes at a lower cost and a reasonable timeframe. Microbial studies, evolutionary studies and medical approaches already take advantage of such methods to compare sequences of patients against controls, newly discovered species with other closely related species and identifying the presence of specific species in a population. Therefore, a great deal of effort has been made to develop algorithms that are able to cope with multiple, pairwise and local alignments of complete genomes. Alignment of unfinished genomes, intra/inter chromosome rearrangements and identification of functional elements are some important tasks that are amenable to analysis by comparative genomics approaches. Visualization of such information is essential to obtain new knowledge and reveal patterns that can only be perceived by the human eye. In this section we present a list of lately developed software applications that aim to address all of the aforementioned tasks and we emphasize on their main functionality, their strengths and their weaknesses (see Table ).

Comparative genomics

Tool	Purpose	Properties	Support	
Cinteny []	Fast identification of syntenic regions	• Flexible parameterization	• Pre-loaded annotated mammalian, invertebrate and fungal genomes	
• User-provided data such as orthologous genes, sequence tags or other markers	
ggbio []	Views of particular genomic regions and genome-wide overviews	• ideograms	• Bioconductor Library	
• grand linear views	
• sequence fragment length	
• edge-linked interval to data view,	
• mismatch pileup,	
• several splicing summaries	
GenomeComp []	A tool for summarizing, parsing and visualizing a genome wide sequence comparison	• A tool to locate the rearrangements, insertions or deletions of genome segments between species or strains	• Fasta format	
• Genbank format	
• EMBL format	
•BLAST output file	
Circos []	Developed to identify and analyze similarities and differences between larger genomes	• Circular layout	• It supports its own file format	
• Scatter, line, and histogram plots, heat maps, tiles, connectors, and text	
DHPC []	Visualization of large-scale genome sequences by mapping sequences into a two-dimensional using the space-filling function of Hilbert-Peano mapping.	• Repeating sequences	• DNA sequences can be loaded in plain text or FASTA forma	
• Degree of base bias	
• Regions of homogeneity and their boundaries,	
• Mark of annotated segments such as genes or isochores.	
HilbertVis []	Functions to visualize long vectors of integer data by means of Hilbert curves	• Chip-Seq data	• The stand-alone version can load GFF, BED/Wiggle and Maq map files.	
• Chip-chip data	
• Exploration at different zoom levels of detail	
• The R packages HilbertVis and HilbertVisGUI are integrated in the R / Bioconductor statistical environment and can display any data vector prepared with R.	
In-GAVsv []	Detection and visualization of structural variation from paired-end mapping data and detection of larger insertions and complex variants with lower false discovery rate	• Identification of different types of SVs, including large indels, inversions, translocations, tandem duplications and segmental duplications.	• A FASTA formatted reference sequence and a SAM alignment are required	
• A PTT formatted annotation file for the reference sequence is optional.	
• Distinction between homozygous and heterozygous variants	
Meander []	It is mainly developed to visually discover and explore structural variations in a genome based on Read-Depth and Pair-end information	• Linear view	• It supports its own file format both for RD and paired-end data	
• Hilbert curve –based view	
• Comparison between up to four samples against a reference simultaneously	
• Visualization ofvarious types of structural inter/intra chromosomal variations	
• Exploration of data at different resolution levels	
MEDEA []	Genomic feature densities and genome alignments of circular genomes	• Customization of since tracks can by dragging and dropping into a desired position	• It supports its own file format	
• User-defined color schemes	
• Zooming into specific regions and smooth navigation	
MizBee []	Synteny browser for exploring conservation relationships in comparative genomics data	• Side-by-side linked views and data visualization at different scales, from the genome to the gene	• Edge hustling and layering to increase visual signals about conservation relationships related to closeness, size, relationship, and orientation.	
Seevolution []	Interactive 3D environment that enables visualization of diverse genome evolution processes	• Interactive animation of mutation histories involving genome rearrangement, point mutation, recombination, insertion and deletion.	• Accepts complete phylogenetic trees and allows path tracing between any two points.	
•Simultaneous visualization of multiple organisms related by a phylogeny.	
•3D models of circular and linear chromosomes	
Sybil []	Comparative genome data, with a particular importance on protein and gene clustered data	• Graphical demonstration of local alignment of the genomes in which the clustered genes are located	• Genomes are organized in a vertical heap, as in multiple alignments and shaded areas links are used to connect genes that belong to the same cluster	
VISTA []	Global DNA sequence alignments of arbitrary length	• Global and alignment visualization up to several megabases under the same scale	• Dynamic and interactive dot-plots	
Discussion
Advances in high throughput next generation sequencing techniques allow the production of vast amounts of data in different formats that currently cannot be analyzed in a non-automated way. Visualization approaches are today called upon to handle huge amounts of data, efficiently analyze them and deliver the knowledge to the user in a visual way that is concise, coherent and easy to comprehend and interpret. User friendliness, pattern recognition and knowledge extraction are the main goals that an optimal visualization tool should achieve. Therefore, tasks like handling the overload of information, displaying data at different resolutions, fast searching or smoother scaling and navigation are not trivial when the information to be visualized consists of millions of elements and often reaches an enormous level of complexity. Modern libraries, able to visually scale millions of data points at different resolutions are nowadays essential.

Current tools lack dynamic data structure and dynamic indexing support for better processing performance. Multi-threaded programming or parallel processing support would also be a very intuitive approach to reduce the processing time, when applications run in multicore machines with many CPUs. Efficient architecture setup, that would decentralize data and distribute the work between the servers and the clients, is also a step towards the reduction of processing time.

While knowledge is currently stored in various databases, distributed across the world and analyzed by various workflows, the need of integration among available tools is becoming a necessity. Next-generation visualization tools should be able to extract, combine and analyze knowledge and deliver it in a meaningful and sensible way. For this to happen, international standards should be defined to describe how next generation sequencing techniques should store their results and exchange them through the web. Unfortunately today, many visualization and analysis approaches are being developed independently. Many of the new methods come with their own convenient file format to store and present the information, something that will become a problem in the future when hundreds of methods will become available. Such cases are widely discussed in biological network analysis approaches [,].

Visual analytics in the future will play an important role to visually allow parameterizations of various workflows. So far it may be confusing and misleading to the user, when various software packages often produce significantly different results just by slightly changing the value of a single parameter. Furthermore, different approaches can come up with completely different results despite the fact that they try to answer the same question. This can be attributed to the fact that they follow a completely different methodology, therefore highlighting the need for enforcing a more general output format. Future visualization tools should offer the flexibility to easily integrate and perform fine-tuning of parameters in such a way that it allows the end users to readily adjust their research to their needs.

Finally, data integration at different levels varying from tools to concepts is a necessity. Combining functions from diverse sources varying from annotations to microarrays, RNA-Seq and ChIP-Seq data emerges towards a better understanding of the information hidden in a genome. Similarly, visual representations well established in other scientific areas, such as economics or social studies, should be shared and applied to the current field of sequencing.

Competing interests
The authors declare that they have no competing interests.

Authors’ contributions
The authors wrote and revised the manuscript. All authors read and approved the final manuscript.

Acknowledgements
This work was supported by iMinds [SBO 2012]; University of Leuven Research Council [SymBioSys PFV/10/016, GOA/10/009] and European Union Framework Programme 7 [HEALTH-F2-2008-223040 "CHeartED"]. GAP was financially supported by the European Commission FP7 programme 'Translational Potential' (TransPOT; EC contract number 285948). AO was funded by the European Union’s Seventh Framework Programme (FP7/2007-2013) under grant agreement no 264089 (MARBIGEN project). AS was supported by IWT Grant No. IWT-SB/ 093289.

