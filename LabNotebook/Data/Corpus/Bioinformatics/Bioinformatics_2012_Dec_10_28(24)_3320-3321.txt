1 INTRODUCTION
Next generation sequencing has rapidly become the standard approach for identifying mutations responsible for Mendelian diseases (). Although software and file formats for the processing of raw sequence data are relatively robust (; ), there is currently a lack of easy-to-use software for downstream analysis of these data. For some study designs, such as focused analysis of fully penetrant de novo mutations or autosomal recessive inheritance, exome sequence data can be analysed and filtered relatively simply. Increasingly, however, sequence-based approaches are being applied to complex diseases, which are unlikely to follow a simple genetic model, such as autism (), and to more complicated scenarios, such as large pedigrees with incomplete penetrance. These studies require new tools to enable the diverse community of researchers working on such families to interactively and comprehensively analyze next generation sequence data.  shows how our new program, Olorin, integrates within-family linkage analysis with exome sequencing in a user-friendly package.
Olorin uses patterns of gene flow estimated by MERLIN to identify genomic regions shared by affected individuals in large pedigrees. This information is combined with next generation sequence data, and only those variants that lie within shared regions are analysed. Users can further refine the list of variants using Olorin’s realtime filtering tools



2 FEATURES
2.1 File formats
Olorin uses four types of data file: two that provide information about the gene flow calculated by MERLIN (), one defining the pedigree structure, and a list of variants identified by sequencing. MERLIN’s haplotyping functionality is used to compute haplotype inheritance within the pedigree. Details of the genomic markers used in the estimation of haplotypes, and pedigree information about the relationships between individuals and their disease status are read from standard.map and.ped MERLIN format files. All variants identified from sequencing across samples need to be provided as a single variant call format (VCF) file (version 4.0 or greater) ().

2.2 Workflow
2.2.1 Selecting individuals
On loading data, Olorin automatically generates an interactive pedigree using standard conventions for information such as sex and disease status. Users can obtain additional information, such as whether a particular individual has been sequenced, via a mouseover popup box. To begin filtering variants, the user first needs to select individuals to be used in searching for shared genomic segments by clicking on them in the pedigree ().
Screenshot of Olorin running on OS X. (A) the interactive pedigree panel, (B) the general options tab of the filtering dialog, (C) the dynamic filtering panel, (D) genome-wide segments display, highlighting shared segments in green and (E) the variants table



2.2.2 Initial variant filtering
After selecting individuals, the user can customize the analysis via a filtering dialog (). First, they set the minimum number of individuals required to share a segment. This enables searches for variants of incomplete penetrance if the threshold is set below the total number of affected individuals in the pedigree. Next, the user can select which information fields from the VCF will be included for subsequent filtering and display. A population frequency cut-off can also be specified at this point if (as is often the case) the study design is focused on variants expected to be rare in healthy individuals.

2.2.3 Dynamic variant filtering
Olorin populates an analysis table () with variants found in the shared segments. This table can be sorted on any column, and variants in the table can be filtered out in real time using a number of filtering tools (), which are dynamically generated based on the user-selected data fields. Olorin can show variants discovered in any or all of these individuals, depending on the genetic model under consideration.

2.2.4 Predicted variant effects
Because the ‘consequence’ strings in the VCF information field contain a wealth of parseable information, Olorin supports further processing of two variant consequence string formats: the UK10K analysis pipeline format and the Ensembl Variant Effect Predictor format (). Because each variant can have multiple consequences, Olorin automatically selects and displays only the most damaging effect for each variant, showing the remainder via a popup box.

3 IMPLEMENTATION
Olorin is written in Java and will work on any platform with Java 1.6 or later installed. The interactive pedigree is drawn using the PedVizAPI (). The genome-wide sharing plots are generated using source code from the visualization tool, IdeogramBrowser ().

ACKNOWLEDGEMENTS
The authors would like to thank Luke Jostins and Karola Rehnström for their help in discussions regarding features and the user interface.

Funding: Wellcome Trust grant number WT098051.

Conflict of Interest: none declared.

