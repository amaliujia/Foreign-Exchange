Introduction
Understanding how the basic molecular building blocks work together to form dynamic functional units (eg, gene and protein networks that orchestrate development, aging, and response to disease) is one of the central goals of modern biology. The emergence of high-throughput techniques for measuring the expression of thousands of genes, interactions between proteins, genes, regulatory RNAs, and other signaling agents, has made possible system-wide measurements of biological variables.

Network models offer a powerful approach for the representation, integration, and analysis of the resulting data. Hence, the construction and analysis of genetic regulatory networks, protein-protein interaction networks, metabolic networks, and their combinations, are central concerns of systems biology.– Recent advances in systems biology have led to substantial progress on problems such as understanding the essential macromolecular sequence and structural features of molecular interactions; extracting signaling pathways from gene and protein interaction networks;, discovering topological and other characteristics of these networks;– integration of disparate types of data (microarrays, proteomics, physical interaction, subcellular localization, etc.);,, predicting the most important nodes in networks; and finding functional modules in networks.– Such efforts necessarily involve extracting, often in an iterative fashion, meaningful information from large amounts of disparate—often noisy—data and then storing, modifying, and annotating the results of such analyses (eg, hypothesized networks or pathways). There is an urgent need for user-friendly software tools to assist bench scientists to efficiently navigate and manage such a discovery process. Consequently, a number of efforts have focused on development of databases or data warehouses to support specific types of analysis of high throughput gene expression or protein-protein interaction datasets.

Gene expression databases such as the Gene Expression Database (GXD), the Stanford Microarray Database (SMD), and ArrayExpress provide excellent resources for disseminating gene expression data. However, they provide limited support for advanced querying of expression datasets or selective sharing of private datasets within or among research groups.

A variety of software packages have recently become available for constructing and enriching genetic and regulatory networks from gene expression data (eg, ARACNe is a command line tool for reconstructing gene regulatory networks from expression data using information gain; ExpressionCorrelation Cytoscape is a plug-in for constructing gene-correlation networks using Pearson correlation), binding data (eg, MINDy is an algorithm for finding the influence of a modulator gene on the regulatory activity of a transcription factor gene given a set of target genes; MatrixREDUCE is a tool for predicting binding specificity and concentration of transcription factors in the nucleus), and information from literature searches (eg, Agilent Literature Search, GSNet, and Biology Networks Gene Ontology tool (BINGO) construct gene networks based on combining information parsed from paper abstracts/literature), and for visualizing and analyzing networks (eg, Cytoscape, Osprey, BioMiner, Pathway Editor, GenePath, Genetic Network Analyzer, GenMapp2, GeneWays, and geWorkbench are all platforms for visualization and analysis of gene/protein networks). Currently, no single plug-in exists that automates the tasks of constructing, querying, and analyzing the network models for both weighted and un-weighted networks based on gene expression data within Cytoscape while also providing a user-friendly interface for all the functionality, and a repository for storing and retrieving the networks.

It is against this background that we developed BioNetwork Bench, a user-friendly open source suite of database and software tools for constructing, querying, and analyzing gene and protein network models as a Cytoscape plug-in featuring a common and intuitive user-interface for all the functionality. BioNetwork Bench currently supports a broad class of gene and protein network models (eg, weighted and un-weighted undirected graphs, multi-graphs). It enables biologists (especially, bench biologists with limited expertise in database query languages etc.) to manipulate public as well as private gene expression, macromolecular interaction and annotation data; interactively query gene expression datasets; integrate data from multiple networks; query multiple networks for interactions of interest; and store and selectively share the data as well as the results of analyses. BioNetwork Bench is implemented as a plug-in for, and hence is fully interoperable with, Cytoscape—a popular open-source software suite for visualizing macromolecular interaction networks.

BioNetwork Bench has been successfully used by a team of bench biologists to assemble and iteratively expand an experimentally well-characterized seed network of genes that orchestrate the differentiation of retinal progenitor cells into rod photoreceptors. BioNetwork Bench offers a powerful and easy-to-use tool for bench biologists to explore multiple high throughput datasets in the context of their specialized biological knowledge, to help them generate and prioritize hypotheses for further investigation using traditional molecular or genetic approaches. Although initially aimed at a community of biologists interested in the retina, the tool can be adapted easily to work with other systems simply by populating the associated database with the relevant datasets.

BioNetwork Bench currently supports the storage, manipulation, and sharing of annotated networks and expression datasets; concurrent searching of multiple private and public datasets; transferring query results into a new search, and easy querying by Gene Ontology (GO) annotation (including display and browsing of GO categories and automatic retrieval of GO annotations). It also offers features such as constructing correlation networks from expression data and advanced network merging.

Program Features
BioNetwork Bench supports multiple types of users with different privileges (administrators, expert users, and standard users). Database administrators have rights to administer the database and user accounts (and in principle, have access to all datasets stored on the system). A script is provided for database administrators to install a MySQL database that will be utilized by BioNetwork Bench, as well as a script to update a local copy of the GO database used for finding GO annotations of network genes.

All users, including database administrators, expert users, and standard users, are allowed to utilize public data and their own private data as well as query networks and expression datasets that they are allowed to access. All users are allowed to load any dataset of their choice into the database, annotate it, and if they so choose, selectively share data (including datasets that they have uploaded into the system, or results of analyses that they do) with other users by granting them rights to view, update, or delete specific datasets. All users are allowed to create a private copy of a public dataset, modify their private copy and store it in their private space, which is invisible to others except the administrator and the specific users or groups of users that have been granted access rights.

Manipulating networks and expression data
BioNetwork Bench provides a simple method to load networks or expression data into the database, save and delete networks from the database, or load expression datasets from a file. BioNetwork Bench requires the user to supply dataset citation, a record that includes some basic information about the source of the data (name of the dataset, title of the publication, journal, etc.) when saving a new dataset into the database. Users can query for the dataset using the dataset citation information. In the case of derived data, the citation can include details of the workflow or analysis steps that were used to generate the derived data (eg, selection of a subset of data based on some criteria).

Building correlation networks from expression data
BioNetwork Bench currently supports the construction of gene expression correlation networks (undirected weighted graphs) from expression data using a Pearson or Spearman Rank correlation function and a user-specified positive or negative correlation threshold.

Querying expression data
The search function enables users to find genes correlated with “any” or “all” user-provided “target” genes with a correlation coefficient higher than the selected threshold (using Pearson or Spearman functions). A set of networks is returned, where each is a correlation network extracted from a single dataset, trimmed to only include the target genes and genes they are correlated with, in a given dataset. Resulting networks can be loaded into Cytoscape for viewing, merged (with a Merge option in the Networks window) to identify intersection and/or overlap of the networks, or reused for further queries. An “Import selected names from Cytoscape” option imports a list of target gene names of user-selected network nodes from networks loaded in Cytoscape. “Correlated in at least k datasets” option produces a network composed of target genes and genes correlated with them in at least k datasets, where k is a parameter specified by the user.

Merging networks
The Merge function allows the creation of a new network merged from a set of selected networks. A resulting network will only include nodes and edges present in all of the selected networks if an “intersection” option is chosen, or all nodes and edges present in at least one of the selected networks if the “union” option is chosen. The users have the ability to force a certain set of nodes to be included in the intersection network, even if these nodes are not present in all of the networks used for merging.

Querying networks
BioNetwork Bench provides multiple querying capabilities for easily searching for genes in networks loaded into Cytoscape as well as networks stored in the database. The list of genes that satisfy the query criteria are highlighted in the networks being queried. The results can be used in multiple ways, such as creating a new network from highlighted nodes (utilizing Cytoscape’s functionality), storing resulting networks in the database, merging networks, and reusing the results by transferring names of highlighted nodes to new queries.

Querying nodes by name allows the user to determine which networks in the database contain the gene(s) of interest or quickly locate gene(s) in a loaded network. Querying nodes by attribute locates nodes that possess a certain attribute, such as “CanonicalName.” Querying by interaction provides a way to find nodes/genes connected to a set of target genes in previously annotated networks. Querying genes by their GO annotation (see ) provides an easy way to find genes that belong to a certain GO category with respect to molecular function, biological process, or cellular location. A GO graph is loaded in a form of an expandable tree, where a user can select any category at any level to query a network (loaded in Cytoscape or stored in the database) for genes in that category.

Implementation
BioNetwork Bench consists of a database for storage and manipulation of networks and expression data for multiple users, together with an interactive query engine. The query engine allows interactive probing of expression datasets and annotated networks, as well as merging and reuse of the results obtained (). The query engine retrieves information from networks and expression data loaded into Cytoscape, networks and expression data stored in the database, and GO annotations and term relationships stored in the local copy of the GO database. The BioNetwork Bench Database stores protein and gene expression datasets, as well as inferred or proposed genetic or interaction networks. Since our research is focused on mouse retinal development, the datasets currently present in the database reflect that interest. However, data for any organism or tissue can be stored in the database; the schema used is equally suitable for storing gene/protein expression data and networks for any biological system. A relational database was installed using MySQL Server 5.0 which was chosen due to its widespread use and non-commercial availability. Taking into consideration a possible expansion of the database and a need for future improvements in speed, MySQL was also chosen among other RDBMS (Relational Database Management Systems) due to its support of range and hash partitioning (available in MySQL server 5.0.1 beta). The database consists of 11 tables containing network data, gene expression data, and information about users ().

A MySQL copy of GO was obtained from the GO consortium website. The Gene Ontology schema is used for finding gene annotations and determining which nodes (genes) in a network belong to a given GO category. A batch script simplifying the extraction of corresponding files was created to simplify the update process of Mygo, the local copy of the GO schema. A database administrator can easily update the GO database copy on a regular basis by downloading the corresponding releases of the tool.

The database querying program was developed as a plug-in for Cytoscape, a widely used software package for visualization and analysis of genetic networks. The querying engine is written in Java, employing JDBC (Java Database Connector) to create database connections with the Retina and Mygo databases. Several Borland JBuilder libraries were used in the creation of the graphical user interface. The querying engine translates user-selected options in the Query tab in Expression or Networks window into a set of corresponding SQL queries. Occasionally, extra computation is required in addition to querying, such as computing correlations between gene expression profiles.

Case study
As noted earlier, BioNetwork Bench is intended to assist bench biologists in exploiting large scale gene expression datasets to iteratively refine a hypothesized gene network and to prioritize hypotheses for further experimental investigation. We describe a case study that demonstrates how BioNetwork Bench supports this type of analysis. Specifically, we illustrate the application of BioNetwork Bench using the analysis previously reported by Hecker et al, which explored an approach to querying gene expression data from five previously published datasets from developing mouse retina.– This approach used a ‘seed network’ of genes () that have been shown using detailed molecular and genetic experiments to govern rod photoreceptor development.–

Despite their reported low level of concordance across the different datasets, Hecker et al showed that by integrating multiple datasets, they could reconstruct a majority of the links between the seed network genes simply on the basis of observed correlations between genes in multiple (at least 2 out of 5) gene expression datasets (recreated using BioNetwork Bench, ). The resulting network showed positive correlations between several genes known to be expressed by dividing cells and positive correlations between genes known to be expressed by mature photoreceptors, with negative correlations between the two groups. Based on the premise that genes that are likely to play important roles in rod photoreceptor development are likely to be correlated with more than one seed-network gene, multiple datasets were queried to identify genes that were correlated with more than one seed-network member. Cell signaling pathway data (KEGG, http://www.genome.jp/kegg/pathway.html) was then retrieved for each gene that was correlated with multiple members of the seed network. Using this procedure, 10 such genes were identified as part of the BMP/SMAD signaling pathway. BMP/SMAD signaling has been implicated in rod photoreceptor development and 22 proteins were identified as members of WNT/Frizzled signaling, which has been implicated in rod photoreceptor differentiation. From the list of genes correlated with multiple seed-network members, Hecker et al reported 8 additional hypothesized candidates for addition to the seed-network using this approach.

The analysis reported by Hecker et al utilized a combination of custom-written statistical analysis routines in R to compute the correlations and match ids across datasets. The basic steps used in this analysis are not especially complicated. However, perhaps because of the effort needed to glue together the individual steps, either manually or with user-written scripts, such analyses is not commonly used by bench biologists.

BioNetwork Bench was created primarily for use by biologists with limited exposure to database query languages such as SQL but who are nevertheless interested in acquiring and manipulating information about their genes/proteins/pathways of interest. The software can be used by scientists with diverse backgrounds and levels of expertise in informatics. Our goal was to build a software system that would allow users to ask biologically meaningful questions about their data and let them combine and reuse their results to construct and annotate genetic networks. We utilized BioNetwork Bench in our case study (which recreated an analysis of mouse retinal development), specifically to identify and prioritize experimental targets for analysis of rod photoreceptor differentiation. BioNetwork Bench, a plug-in for Cytoscape, is freely available for download at http://bionetworkbench.sourceforge.net.

We now proceed to describe how all of the steps in the analysis described by Hecker et al can be carried out using the BioNetwork Bench. We start by populating the BioNetwork Bench database with gene expression data from developing mouse retinas using the following datasets: an Affymetrix microarray containing gene expression measurements in developing retina from Dorrell et al, another Affymetrix microarray of retinal genes from Liu et al, Serial Analysis of Gene Expression (SAGE) of developing retina from Blackshaw et al, a cDNA microarray of whole retina from Zhang et al, and an Affymetrix microarray with measurements limited to rod progenitor cells only from Akimoto et al.

Datasets were pre-processed prior to the analysis. Expression profiles of unidentified genes were discarded. The datasets were processed in the same manner described by Hecker et al. Specifically, in cases where multiple SAGE tags or 2D PAGE spots mapped to a single gene, the total expression for the gene was obtained by summing the values of the SAGE tags/2D PAGE spots. In cases where multiple microarray probes mapped to a single gene, the total expression for the gene was obtained by taking the median of the probes’ expressions. As this preprocessing step is highly dataset dependent (eg, SAGE datasets/spots are treated differently than microarray datasets), BioNetwork Bench does not currently offer a streamlined approach to automate the aforementioned pre-processing steps. However, BioNetwork Bench offers the option to normalize any imported dataset. Thus, the datasets were normalized with respect to a mean of 0 and variance of 1 by BioNetwork Bench to ensure that the changes in expression levels were represented on the same scale.

Currently, several methods are available for dataset normalization. For example, RMAExpress (http://rmaexpress.bmbolstad.com) is a program available for Microsoft Windows and Mac OS X platforms for normalizing Affymetrix microarray datasets. Similarly, R’s Bioconductor (http://www.bioconductor.org) package provides several functions including RMA, MAS 5.0, Quantile and LOESS normalization.

BioNetwork Bench was used to construct a gene network based on each dataset by establishing a link between a pair of genes if the magnitude of Spearman Rank correlation between their expression values was greater than or equal to a threshold of 0.65 ().  shows the links between pairs of genes in the seed network that can be recovered from the resulting gene network.

The Expression Dataset Query window () was used to search for genes that are positively or negatively correlated with at least two genes in the seed network at a |0.65| Spearman Rank correlation cutoff in at least two out of the five datasets. To do this, all 21 possible pairwise links between nrl, nr2e3, chx10, rho, neurod1, crx, and rb1 (ie, nrl-nr2e3, nrl-chx10, nrl-rho … etc.) were used as queries. The generated networks from each query were then searched for genes that correlated (either positively or negatively) with both query genes using the Network Query window (). The specific procedure within BioNetwork Bench is as follows: using the Expression Dataset Query window (example is shown in ) each of the seed network genes was entered, the “Any” radio button was selected (instead of “All”), and the “calculate” field was set to “All Correlated Nodes” (instead of “Only Positively Correlated Nodes” or “Only Negatively Correlated Nodes”). We then queried the network using each of the 21 possible pairwise links between nrl, nr2e3, chx10, rho, neurod1, crx, and rb1 (ie, nrl-nr2e3, nrl-chx10, nrl-rho … etc.). The generated networks from each query were then searched for genes that correlated (either positively or negatively) with the seed network genes using the Network Query window (). The gene list of correlated genes was then exported in tabular format through Cytoscape’s built-in “Export Table” functionality.

The above analysis demonstrates BioNetwork Bench’s capability to ease the construction and querying of gene networks without requiring the user to possess background knowledge in SQL, scripting languages or other specialized software packages. The time required to perform this analysis was around 4 hours of computing time (total time required for the construction of the networks from the expression data conducted on a 2.4 GHz Quad-core machine with 4 GB of memory). The results produced through this case study reflected the same results presented in Hecker et al’s paper while abiding by a streamlined process that is consistent and less prone to errors that may result from exporting data from one software package format to another, as was necessary for the analysis presented in Hecker et al.

Discussion
A number of databases for multi-organism data augmented with front-end querying applications have been created in the recent years. The Biological Networks tool offers support for arbitrary queries, clustering and Gene Ontology enrichment analysis of nodes, searching over 20 public databases utilizing known annotations for the stored pathways, and presents several network construction options. However, it does not allow users to easily include their own networks or datasets in a database search or to easily store and reuse query results. Furthermore, constructing complex queries requires a grasp of database querying language at a level that is often beyond the expertise of a bench biologist. The Biozon database contains sequence, structure, and interaction data and supports querying and fuzzy searches using sequence, expression, or structural similarity., However, it does not offer support for user-defined attributes or visualizing search results in the form of a network. Other public databases or data warehouses with limited querying capabilities include: Protein, Signaling, Transcriptional Interactions and Inflammation Networks Gateway (pSTIING), which provides support for generating pictorial representations of protein-protein interactions and transcriptional regulatory networks and includes CLADIST, a tool for clustering gene or protein expression data; BioWarehouse, a data warehouse populated with biological data from public databases; the ONDEX framework, which supports analysis of protein-protein interactions, transcription factors, analysis of relationships between expressed genes, and some text mining; and cPath, a cancer pathway database.

BioNetwork Bench provides the ability to store, share, and modify biological networks and expression datasets seamlessly through Cytoscape. In addition to the correlation network construction functionality that BioNetwork Bench offers, it also allows the users to query the genes in the stored networks and datasets based on Gene Ontology categories (for networks only), custom annotations, interaction partners, and correlation of their expression patterns.

Conclusions
We have developed BioNetwork Bench, an open source, user-friendly suite of database and software tools for constructing, querying, and analyzing gene and protein network models. BioNetwork Bench currently supports a broad class of gene and protein network models (eg, weighted and un-weighted undirected graphs, multi-graphs). It enables biologists to manipulate public as well as private gene expression, macromolecular interaction and annotation data; interactively query gene expression datasets using a network of seed genes of interest; integrate data from multiple networks; query multiple networks for interactions of interest; as well as store and selectively share both the data and the Results of analysis. BioNetwork Bench is implemented as a plug-in for, and hence is fully interoperable with Cytoscape, a popular open-source software suite for visualizing macromolecular interaction networks.

Our case study has demonstrated the usefulness of the BioNetwork Bench to bench biologists interested in exploiting high throughput datasets to identify candidate genes and generate testable hypotheses to take back to the bench. Work in progress is aimed at extending the BioNetwork Bench to support a broad class of network representations (eg, Boolean networks, temporal Boolean networks, and their probabilistic counterparts);, additional algorithms for network construction, topological analysis;, discovery of network motifs, and network alignment;, and support for capturing, storing, publishing, and sharing workflows that include a complex pipeline of analysis or queries. Although initially aimed at a community of biologists interested in the retina, the tool can be adapted easily to work with other biological systems simply by populating the associated database with the relevant datasets.

Availability and requirements
BioNetwork Bench is downloadable from http://bionetworkbench.sourceforge.net/. Minimum requirements for running BioNetwork Bench include:

512 Mb of RAM or higher

1GHz CPU or better

Windows 2000/XP/Vista, Mac OS X 10.4, Linux with Java SE 5 or 6 installed (required by Cytoscape)

Screen resolution of 1024×768 or higher (required by Cytoscape)

Cytoscape 2.5.0 or above installed

An active internet connection

Acknowledgements
This research was funded in part by a grant by a National Institutes of Health grant (EY014931) to Heather West Greenlee and Vasant Honavar, a National Science Foundation Integrative Graduate Education and Research Training (IGERT) grant to Iowa State University (DGE 0504304), and by the Center for Integrative Animal Genomics and the Center for Computational Intelligence, Learning, and Discovery at Iowa State University. The work of Vasant Honavar while working at the National Science Foundation was supported by the National Science Foundation. Any opinion, finding, and conclusions contained in this article are those of the authors and do not necessarily represent the views of the National Science Foundation. The authors are grateful to Tim Alcon and Laura Hecker for helpful discussions on the research described in this paper.

Authors’ Contributions

Conceived the BioNetwork Bench: VH and HWG. Designed, implemented, and developed the documentation for the BioNetwork Bench: OK and FT. Carried out the case study demonstrating the integrative analysis of multiple datasets from the developing retina using the BioNetwork Bench: FT. Prepared the manuscript for publication: OK, FT, HWG, and VH.

Competing Interests

Author(s) disclose no potential conflicts of interest.

Disclosures and Ethics

As a requirement of publication author(s) have provided to the publisher signed confirmation of compliance with legal and ethical obligations including but not limited to the following: authorship and contributorship, conflicts of interest, privacy and confidentiality and (where applicable) protection of human and animal research subjects. The authors have read and confirmed their agreement with the ICMJE authorship and conflict of interest criteria. The authors have also confirmed that this article is unique and not under consideration or published in any other publication, and that they have permission from rights holders to reproduce any copyrighted material. Any disclosures are made in this section. The external blind peer reviewers report no conflicts of interest.

Funding

This research was funded in part by a grant by a National Institutes of Health grant (EY014931) to Heather West Greenlee and Vasant Honavar, a National Science Foundation Integrative Graduate Education and Research Training (IGERT) grant to Iowa State University (DGE 0504304), and by the Center for Integrative Animal Genomics and the Center for Computational Intelligence, Learning, and Discovery at Iowa State University.

A diagram of the main components of BioNetwork Bench and a typical workflow.

Database tables and foreign key constraints in Retina database.

The seed network utilized by Hecker et al for querying expression dataset for genes that have been shown to govern rod development.

Notes: The network was constructed based on published experimental evidence and is made up of ten genes. Solid lines indicate direct relationships between seed genes and dashed lines indicate indirect relationships.

(A) The Expression data window and settings used to construct each of the networks for constructing  is shown. BioNetwork Bench was used to construct the correlation network for each dataset while only including nodes whose correlations was equal to or above a 0.65 Spearman Rank correlation cutoff. (B) The Networks Query window used to query for nodes connected to each gene in the seed network is shown. Each link in  was verified using the Network Query functionality of BioNetwork Bench. (C) An example of the settings used to construct the positively correlated nodes with two or more genes of the seed network supported by at least two datasets with a correlation cutoff of 0.65. (D) A screenshot of the Network Query window demonstrating BioNetwork Bench’s feature to query a loaded or stored network based on the GO category of the genes in the network.

Datasets supporting each edge between all pairs of genes shown to be linked in the seed network.

	SAGE	MOE430.20	Mu74Av2_1	Mu74Av2_2	cDNA microarray	Satisfied in at least 2/5 datasets?	Original seed network	
Ccnd1-Cdk4		X	X	X	X	*	Yes	
Ccnd1-Chx10							Yes	
Ccnd1-Rb1		X					No	
Cdk4-Rb1		X	X			*	Yes	
Cdk4-Chx10				X			No	
Crx-Nrl	X		X	X		*	No	
Nrl-Nr2e3	X	X				*	Yes	
Nrl-Rhodopsin	X	X			X	*	Yes	
Crx-Rhodopsin	X	X		X		*	Yes	
Notes: BioNetwork Bench was used to construct the correlation network for each dataset while only including nodes whose correlations were equal to or above a 0.65 Spearman Rank correlation cutoff (see ). Each link in the table was then verified using the Network Query functionality of BioNetwork Bench (see ).

