Introduction
Microsatellite genotype data underpin a wide diversity of genetic studies, in fields including individual identification in forensics, mapping disease genes, kinship inference and population genetics. All but the smallest microsatellite data sets will contain genotyping errors, which can be substantially misleading when undetected. Awareness of the implications of genotyping error has increased greatly in recent years, and there is an emerging consensus that error rates should be estimated and reported, particularly when performing error-sensitive analyses such as parentage analysis or individual identification (; Hoffman and Amos, 2005; ; ). Although the benefits of estimating and correcting for genotyping errors are most obvious when genotyping highly error-prone (e.g. non-invasive) samples, even low levels of genotyping error of 0.5–2% per genotype can mislead inference from microsatellite data (; Hoffman and Amos, 2005; ).

Ideally, error rates should be estimated by a combination of approaches, the most widely used being: (1) counting Mendelian inconsistencies in parent—offspring pairs; (2) comparing error-prone genotypes with high-quality reference samples; and (3) counting mismatches between duplicated genotypes. The first two approaches will generally yield more reliable estimates than the third, but may not be feasible because pedigree data and reference samples will often be unavailable. The third option of re-genotyping a random subset of samples at all loci is widely recommended (; Hoffman and Amos, 2005; ; ) and will almost always be feasible but suffers from two disadvantages. Firstly, when errors are frequent a non-negligible proportion of repeat genotypes will sustain errors in both genotypes, leading to undercounting of errors (e.g. due to an underlying heterozygous genotype of AB being genotyped twice as AA). Secondly, many analyses benefit from breaking down single error rates into two distinct classes of error—allelic dropout and false alleles ()—which is not straightforward when both duplicates are error-prone.

Pedant is a program for MS Windows that implements a maximum likelihood method for estimating rates of allelic dropout and false allele error from microsatellite genotype data (). Allelic dropout occurs when a heterozygote is genotyped as a homozygote due to the random failure of one allele to PCR-amplify, and a false allele occurs when an allele is mis-genotyped as any other allele (). Allelic dropout and false allele error rates can be estimated as per-genotype probabilities, but here we treat them as per-allele probabilities. In a single genotype, ɛ1 is the probability of an allele dropping out, and ɛ2 is its probability of being mis-typed as another allele (). Conversion between the per-allele and per-genotype rates is simple, and both are calculated by Pedant.

Division of errors into allelic dropouts and false alleles is useful not only because allelic dropouts are typically more frequent than false alleles (), but also because the two classes of error affect analyses in fundamentally different ways (; ). For example, consider a simple paternity analysis using one locus at which every allele has a 7% probability of error. There are three individuals: one offspring (genotype AB), and only two possible fathers (genotypes CD and CC). Neither candidate father matches the offspring, so an error must be invoked, but because we cannot say in which candidate the error is more likely to have occurred, the data are uninformative. However, suppose we can break down the total error probability into ɛ1 = 5% for allelic dropout and ɛ2 = 2% for false alleles. We will then have greater confidence in genotypes AB and CD than in CC, because only CC can have been affected by allelic dropout (assuming only one error per genotype), and attributing AB or CD to error would require us to invoke a less likely class of error. Thus, when separate error rates are known, the data become more informative: the candidate with genotype CC is the more likely father. This principle has been successfully applied to pedigree reconstruction (; ) and individual identification ().

Unlike estimating a single error rate, estimating ɛ1 and ɛ2 is not a simple exercise in counting errors because when both repeat genotypes are error prone the class of error responsible for a mismatch can be ambiguous. For example, the mismatch AA/AB could be caused by allelic dropout in an underlying genotype of AB (giving AA) or a false allele in an underlying AA (giving AB). Instead, Pedant counts different types of matching and mismatching duplicate genotypes (AA/AA, AA/AB, AB/AB, AB/AC, etc) and searches for the pair of error rates that maximises the likelihood of the observed counts (). For example, a duplicated data set with few AA/AB-type mismatches and many of type AB/AC supports a low allelic dropout rate and a high false allele rate.

The first step in using Pedant is to ascertain whether the data fit the underlying assumptions of the error model. The principal assumption is that the probability that an underlying genotype is heterozygous (observed heterozygosity, Ho) is known. However, as Ho will be biased by allelic dropouts and false alleles, Pedant uses instead expected heterozygosity, He, which will equal Ho only when the study population is in Hardy Weinberg equilibrium (HWE). Deviations from HWE, such as a substantial heterozygote deficit (FIS &gt; 0.1), that cannot be corrected for using prior knowledge will lead to biased estimates (). Known or suspected population structure can easily be corrected for by using the average within-subpopulation He in place of the global He. Pedant also assumes that errors occur with equal probability across samples and that each allele of a heterozygote is equally likely to drop out. Pedant is fairly robust to deviations from both of these assumptions, but a combination of severe variation in sample quality (), short allele dominance () and high allelic dropout rate (ɛ1 &gt; 0.1) can lead to underestimation of both ɛ1 and ɛ2. Nevertheless, testing of Pedant on real and simulated data suggests that the method is robust to modest deviations from its underlying assumptions ().

The second step in using Pedant is to decide how many genotypes to duplicate at each locus. This will depend mainly on the degree of accuracy required by the downstream analysis, but approximate estimates will generally be adequate (; ; ). The most important factor in determining accuracy is generally the number of visible errors in the input data. Thus, error rate estimation will be most accurate from data with high error rates and high He (because at low He many dropouts will be hidden), and when these conditions do not apply sample size should be increased to compensate. If average cross-locus error rate estimates are sufficient, all loci can be pooled as a single locus, so with 10 loci perhaps only 25 to 50 duplicate genotypes per locus might be necessary. On the other hand, if locus-specific estimates are required then at least 100 repeats per locus might be required. These figures are very rough guidelines only. Specific scenarios can be explored using Pedant’s simulation function, which allows users to simulate the estimation of error rates from multiple data sets while varying parameters (ɛ1, ɛ2, He, FIS and sample size). For each error class the individual estimates and their mean and standard deviation are plotted, allowing rapid visual assessment of estimation accuracy under a variety of parameter combinations. Five hundred simulated data sets can be analysed in about 30 seconds.

When the data have been deemed suitable for analysis using Pedant and sample size has been decided, samples should be selected at random and repeat-genotyped blind at all loci. Pedant accepts genotypes in tab-delimited text format, which is easy to create from a spreadsheet. Alternatively, a Pedant input file can be converted from genepop format using an R script included in the download. The input file must contain He estimates for each locus. To minimise the effect of sampling error, He should be estimated from the whole data set, not just the subset that has been duplicated. He (and its standard error) can be calculated in Pedant.

When the input file has been loaded, Pedant locates the maximum likelihood (ML) estimates, of ɛ1 and ɛ2, which takes about one second per locus, and outputs the estimates together with 95% confidence intervals calculated using the relative log-likelihood function. Estimates and confidence regions can also be plotted for individual loci (). Details of the ML search algorithm are given in the program documentation.

An alternative method for estimating ɛ1 and ɛ2 across markers is available in MasterBayes, an R package for Bayesian pedigree reconstruction (). MasterBayes samples the posterior distributions of ɛ1 and ɛ2, from which point estimates and credible intervals can be obtained using summary statistics describing the relevant marginal distribution. Although Pedant and MasterBayes differ in their approaches to parameter estimation (maximum likelihood versus Bayesian), their underlying error models are similar and they would be expected to reach similar estimates. We compared the two programs using two simulated data sets: low error (ɛ1 = 0.01, ɛ2 = 0.005) and high error (ɛ1 = 0.05, ɛ2 = 0.02). The low rates are typical of highly automated genotyping while the higher rates represent smaller, more error-prone studies (). We set ɛ1 higher than ɛ2 because allelic dropouts are generally more frequent than false alleles (e.g. Broquet and Petit 2004). Comparison of the mean error estimates across 100 loci () shows that both programs reach broadly similar and accurate estimates, particularly at higher error rates (for the reasons noted above). For both programs bias was highest in estimating the lowest of the four error rates (ɛ2 = 0.005), with MasterBayes overestimating (ɛ̂2 = 0.0066, bias = 31%) and Pedant underestimating (ɛ2 = 0.005, ɛ̂2 = 0.0041, bias = −18%). Overall Pedant recovered the population error rates more accurately, although it should be noted that the accuracy of both programs will vary with other parameters such as He and sample size. For the small sample sizes that are likely to be feasible, by far the greatest source of estimation error will be sampling error (as reflected by the width of the interquartile range), which is beyond the control of either method. Given that the two programs produce similar results, the choice of which to use should be guided by more pragmatic considerations. Pedant is simpler to use, in that it has a user-friendly interface () and does not require familiarity with computer programming. Moreover, production of locus-specific estimates, which are used by some analyses (e.g. ), is more straightforward. However, error rate estimation is more flexible in MasterBayes because it can use more than two repeat genotypes and it allows the incorporation of pedigree information. In addition, like other R programs it has the useful property of being adaptable by users with some knowledge of the R programming language. Thus, the choice of program will depend upon the experience and requirements of the user.

The MS Windows executable program, documentation, input file converter and source code for Pedant (written in Borland Delphi version 7.0) are available from http://www.stats.gla.ac.uk/~paulj/pedant.html.

We thank Jarrod Hadfield for comments on the manuscript. PCDJ was funded by a Leverhulme Trust project grant.

The Pedant interface, showing ML error rate estimates for allelic dropout and false alleles with 90% and 95% confidence regions.

Summary statistics assessing the performance of the programs MasterBayes and Pedant in estimating error rates from two simulated data sets.

Simulated data set	Program	Error rate parameter	Mean estimate (95% CI of mean)	Median estimate (interquartile range)	Bias	
Low error rates (n = 100 loci)	MasterBayes	ɛ1 = 0.01	0.0118 (0.0105, 0.0130)	0.0111 (0.0072, 0.0160)	17.9%	
ɛ2 = 0.005	0.0066 (0.0058, 0.0073)	0.0056 (0.0038, 0.0085)	31.3%	
Pedant	ɛ1 = 0.01	0.0107 (0.0095, 0.0119)	0.0098 (0.0061, 0.0147)	7.0%	
ɛ2 = 0.005	0.0041 (0.0034, 0.0048)	0.0032 (0.000, 0.0062)	−18.3%	
High error rates (n = 100 loci)	MasterBayes	ɛ1 = 0.05	0.0526 (0.0496, 0.0556)	0.0517 (0.0411, 0.0619)	5.2%	
ɛ2 = 0.02	0.0228 (0.0211, 0.0244)	0.0221 (0.0169, 0.0287)	13.8%	
Pedant	ɛ1 = 0.05	0.0511 (0.0483, 0.0539)	0.0516 (0.0409, 0.0598)	2.2%	
ɛ2 = 0.02	0.0193 (0.0177, 0.0208)	0.0178 (0.0140, 0.0248)	−3.7%	
For each data set 100 duplicate genotypes were simulated in MasterBayes from 100 loci with 10 alleles per locus. Allele frequencies for each locus were generated randomly from the broken stick distribution.

In MasterBayes locus-specific error rates were estimated as the median of the relevant marginal distribution based on 100,000 MCMC iterations (after discarding 10,000 burn-in iterations). In Pedant the ML estimates located during 10,000 search iterations were used.

