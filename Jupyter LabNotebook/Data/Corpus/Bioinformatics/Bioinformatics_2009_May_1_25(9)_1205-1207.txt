1 INTRODUCTION
Inferring gene regulatory networks (GRNs) from experimental data is a challenging task becoming increasingly important with routine practical use of corresponding experimental techniques, such as RNA interference combined with microarray or next generation sequencing. Various computational algorithms for reconstructing GRNs from experimental data have been developed in the last decades (see Supplementary Material for an overview). Besides the algorithmic developments, the actual assessment of methods performances remains a challenge, primarily due to the lack of experimental benchmark data. However, such systematic validation is crucial, since it shows strengths and weaknesses of the methods and their suitability for the specific problem domain (time series or perturbation experiments, noisiness of data, etc.).

Availability of experimental data, with a few exceptions, such as the network described by Davidson et al. (), is still the major bottleneck for GRN reconstruction. Hence, generating simulated data derived from theoretical considerations is still the method of choice for constructing benchmark datasets and for conducting performance studies on individual methods. These theoretical models should reflect features and complexity of real regulatory processes. They allow performance analysis under well-defined conditions using appropriate network characteristics, network complexity, noise levels, missing data or other hidden information. This knowledge can aid further algorithmic developments and guide improvements of experimental as well as analytical methods.

There are some tools that provide such forward GRN modeling approaches, such as SynTReN (den Bulcke et al., ), RENCO (Roy et al., ) or SynBioSS (Hill et al., ). However, despite of their usefulness they lack some features such as automatic generation of different network types, manipulation of network structure, simulation of global and local perturbation and visualization of simulation results in a single framework, specialized for GRNs (Supplementary Material).

To meet the above mentioned requirements, we have developed the GRN generator GeNGe (GEne Network GEnerator), a web application to model GRNs of different types. The GRNs are used to set up a deterministic ordinary differential equation (ODE) system. The gene regulatory model system is composed of instances of mRNAs and proteins acting as transcription factors (TFs) and their corresponding target genes. Non-linear kinetics based on the logic described by Schilstra and Nehaniv () are used to describe the influence of sets of independently or jointly binding TFs on the expression of a gene. Various dynamics can be modeled, such as oscillation and bistability (Supplementary Material). Global perturbations (network noise) or local perturbations of a single or multiple network nodes can be simulated and the resulting time series are visualized in order to display the perturbation effects. All results can be downloaded and used for validation of reverse engineering methods or studies of the network dynamics.

Moreover, GeNGe offers features for the topological characterization of GRNs. Network parameters are computed, such as in- and out-degree distributions, average path lengths and clustering coefficients. Furthermore, by varying parameters of the kinetic laws or by choosing different kinetics, in silico analyses can be performed, e.g. on the effects of knock-downs (partial knock-downs) of a single gene or groups of genes. The results can be used to define critical network nodes and suitable candidates for perturbation experiments and thus guide future experimental work.

2 FUNCTIONALITY
The workflow of GeNGe is divided into three levels (). In the first level, the network level, networks are added to a network repository that will be used for further analyses and simulations. GeNGe provides several pre-defined GRNs, such as a part of the developmental network in sea urchin described by Davidson et al. (), artificial networks and network motifs. Furthermore, the upload of user-defined networks, in form of tables or adjacency matrices, is supported. Various artificial networks can be generated such as random networks, scale free networks and networks composed of small regulatory network motifs (Barabási and Oltvai, ; Bollobás et al., ; Lee et al., ). Network parameters can be adjusted by the user to generate networks with specific topological characteristics. Furthermore, it is possible to change any network by adding or deleting nodes and edges as well as associated regulation strengths. TFs are assumed to bind independently on the DNA. Nevertheless, sets of jointly binding TFs can be specified. The networks can be visualized and diverse topological measures are calculated, e.g. in- and out-degree distributions, average path lengths and clustering coefficients.
Flowchart of the simulation process. It is divided into three levels, the network level, to generate a network topology; the kinetic level, to select kinetic laws of the dynamic model; and the simulation level, to set the parameter values and simulate time series with local or global perturbation.



In the next level, the kinetic level, kinetics of the model are specified. Degradation of mRNA and protein can be modeled by a linear or a Michaelis–Menten kinetic. The translation is described by a linear kinetic law. For the transcription dynamic, different non-linear kinetic laws can be selected. In the third level, the simulation level, parameters of individual kinetic laws can be specified or set randomly. Based on the network topology, the kinetics and the parameters, an ODE system of the network is set up and exported to PyBioS simulation engine via a web-services based API (Wierling et al., ). Besides unperturbed time series analysis, global perturbations (such as Gaussian noise) as well as single or multiple local network perturbations (e.g. knock-downs) can be introduced and the resulting steady states of the system are computed. The procedures can be repeated with different settings and used in an iterative way.

All resulting time series can be visualized. For knock-down experiments, the ratio of each network node of the knock-down and control simulations is calculated and visualized in the network graph. All results, including the networks in the format of Systems Biology Markup Language (SBML), time series and simulation parameters can be downloaded for further analyses. More details about the network and data generator is given in the Supplementary Material.

3 EXAMPLE
An Example workflow in GeNGe is shown in  which is adapted from the synthetic repressilator by Elowitz and Leibler (). The pre-defined network ‘Simple Oscillator’ is added to the network repository. A local perturbation of gene lacI is introduced with a knock-down degree of 80%. The control and knock-down time series are calculated. The oscillations of the mRNAs and proteins are still observable with this rate of knock-down, however, there are changes in frequency and amplitude. A breakdown of the oscillations is observable at 97% rate of knock-down (data not shown).
Example workflow in GeNGe. (A) Pre-defined network ‘Simple Oscillator’ is selected. (B) A kinetic schema for transcription and degradation is specified. (C) Local perturbations (knock-down) of gene lacI of degree 80% is selected. (D) Simulated time courses of the mRNA and proteins for control (blue) and knockdown (red) can be visualized or downloaded.



Whereas the effect of local perturbations is straightforward in small networks, in larger networks the impact of such perturbations on the steady state of the system is less obvious and thus simulations can guide experimental work in selecting the most promising candidates. An example given in the Supplementery Material shows that knock-downs of genes encoding highly connected TFs with many targets have not always a large impact on the global system state. In contrast, TFs with critical positions within the network can have a large downstream effect even if they have only a few direct targets.

Supplementary Material
[Supplementary Data]
ACKNOWLEDGEMENTS
We thank Maria Schilstra for valuable comments on the kinetics.

Funding: Max Planck Society and the EU under its sixth Framework Programme [grants EMBRACE (LSHG-CT-2004-512092), AnEUploidy (LSHG-CT-2005-037627), the seventh Framework Programme project APO-SYS (HEALTH-F4-2007-200767)]; German Federal Ministry of Education and Research (BMBF) through the NGFN Plus research initiative (Mutanom project (01GS08105)).

Conflict of Interest: none declared.

