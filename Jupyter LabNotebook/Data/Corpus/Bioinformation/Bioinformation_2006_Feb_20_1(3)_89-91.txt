Background
SSRs (simple sequence repeats) or microsatellites are the genetic loci where one or few bases are tandemly repeated for varying 
      numbers of times. Such repetitions occur primarily due to slipped-strand mis-pairing and subsequent error(s) during DNA 
      replication, repair, or recombination. [] SSRs comprising 1­6 bp long, 
      occur frequently and are ubiquitously interspersed in many genomes. [–
      ] The biological importance of SSR tracts has been clearly delineated. Microsatellite 
      loci show extensive length polymorphism, and hence they are widely used in DNA fingerprinting and diversity studies. They are also 
      considered as ideal genetic markers for the construction of high-density linkage maps. [–] In spite of its high significance, a bioinformatics tool for the 
      analysis of these regions is not available. 

Available algorithms directly or indirectly detect tandem repeats. However, there are many limitations with these algorithms. 
      The drawbacks are high computational time required by the algorithm and their inability to predict the positions of SSRs in the 
      genome. The program Tandem Repeats Finder [] locates repeats with motifs 
      of any size and type, including repeats with insertions and deletions. The program Sputnik [] (unpublished) uses recursion to search for both exact and approximate tandem repeats. Repeating unit 
      lengths of 2 to 5 are sought, and a score is used to determine location. Tandem Repeat Occurrence Locator (TROLL) [], uses a keyword tree adapted from bibliographic searching techniques and attempts to 
      match the keywords exactly but it does not specify the positions of repeats. In this work, we describe a program called SSRscanner 
      (Simple sequence repeat scanner) that uses dictionary approach to find simple sequence repeats of pre-selected motifs. 

SSRscanner is a PERL script developed for scanning genomes to find repeats of any length, their exact position on chromosome 
      and frequency of occurrence. It is fast and requires a standard Personal Computer (PC) and PERL to operate. SSRscanner can accept 
      large sequences as input and large number of motifs can be searched simultaneously. Thus, the running time of the program is 
      greatly reduced. To demonstrate the use of SSRscanner, Arabidopsis thaliana genome was analyzed for finding out 
      distribution, 
      frequency and specific position of SSRs in the genome. [] The advantages 
      over many other programs developed for SSR identification includes its ability to search motifs of any length repeated for a 
      number of times and to give the exact position of the motif in the genome.

Methodology
Program Input
SSRscanner (implemented in PERL) accepts two text files (.txt). Upon execution of the program, it prompts to enter the file 
      name containing the DNA sequence data. It also prompts for a file containing motifs of different repeat types. It then prompts for 
      the number of times for the motifs to be repeated (for example for searching tri-nucleotide repeats the user should enter 3) 
      (). 

Input sequence and motifs are parsed to SSRscanner that extracts the SSRs giving their distribution/frequency and 
      specific location. The results from SSRscanner are appended into result files ().

Program output
SSRscanner gives two files in output (). They are (1) Motifposition.txt 
				(gives the frequency of each repeat provided 
      in the motif file) and (2) Motifresult.exe (gives the specific location of each repeat). The data obtained can then be arranged 
      into desired formats.

Caveats and Future Development
SSRscanner is a PERL script and it requires PERL to be installed on a PC before running the program. We are developing a web 
      based CGI for SSRscanner.  

The authors are grateful to Professor M. Saleemuddin for providing facilities to carryout this work and for his support 
    throughout this project. We also thanks to the Staff of the Distribution information sub-center for their technical help. Department 
    of Biotechnology, Ministry of Science and Technology, Government of India is acknowledged for the financial support.

Figures and Tables
(A) Overview of SSRscanner operational structure; (B) SSRscanner command line showing the executed program.


      Citation:Anwar &amp; Khan, Bioinformation 1(3): 89-91 (2006)

