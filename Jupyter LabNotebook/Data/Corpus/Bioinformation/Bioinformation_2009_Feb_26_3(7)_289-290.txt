Background
The way in which many of the current reference management software packages operate is reference
centered [,]. However, 
the complexity of processes in current scientific publications require a more subject orientated view of information than that available 
in the classical file and folder system employed by current software packages. An Object oriented approach towards the information 
contained in the science literature has proven to be fruitful given the ever increasing demand for ontologies in various fields of 
biology. However, many of these systems are not yet adapted for data integration and are in the process of establishing a common 
vocabulary and syntax. The goal in the development of the BrainSnail program was to offer a light‐weight application that uses
established relationships based on neuroanatomical and pharmacological properties and interactions that have been well established. It 
was decided to use an incremental approach to the augmentation of syntax, and relationships and element types have been chosen to 
flatten the learning curve of users while offering the flexibility to add new properties as they emerge in the literature.

Features and functionalities
BrainSnail is an application software package that allows for easy extraction of information from scientific literature
and the display of interactions evident from the processed text. The display application is based on a paradigm
presented earlier in OntoSlug []. In brief, there are five
classes of objects: regions, substances, receptors, transporters and genes. They are displayed in three different layers (anatomy, 
pharmacology and referencecentered), each offering a different point of view of the given topic of interest.

The anatomy layer is based on the nested relationships typical for the anatomical perception of regionalism in that
brain regions have specific substances, receptors, transporters and genes that are documented in the literature. The pharmacology 
layer focuses on a chemicalmolecular approach, in that interactions between substances, receptors, transporters and genes are the main
focus. In the pharmacology layer regionalism is omitted. The reference layer is a tool for displaying elements that stand 
in relationships to one another or are associated with specific references in the literature. In this layer, all objects
are treated without a hierarchy or a specific set of interactions in mind.

Control of the objects in these three layers takes place through a dynamic graphical user interface which has been
augmented with scripting capacity for quick execution of multi‐object manipulation and data extraction. The Graphical User Interface is 
designed to facilitate the manipulation of nodes, the underlying information they represent and an intuitive display of the relationships
among them. However, each of the three layers has a different range of interactions based on the aspect of the layer.

Data input takes place in the separate input application which has been optimized for rapid text extraction and note taking. Text may 
be combined with a picture source, which allows the addition of figures and tables pertinent to the text note. The input process is 
programmed so that the text is processed for words referring to receptors, regions, substances, genes and transporters as well as keywords
which allow a deduction of interaction between them. The suggested standardized interactions between elements can then be accepted as 
suggested, corrected or discarded. This is followed by integration of data into individual xml files to make up the data core of the display application. This
method of linking individual elements to text passages and text passages to reference information allows for ease of either sharing or 
removing individual segments of the data collection. A basic natural language processing engine is then used to extract the standardized 
interactions from entered text.

Output of searches or information pertaining to a single element takes place using html with embedded links that allows quick 
navigation to the original reference provided the reference is available on the internet. It was decided to use the html format over a 
custom display system since most users are accustomed to and comfortable navigating in this environment. Combining offline data and online
data offers a great degree of consistency in terms of accuracy of references. Information that is not available through printed media, such as 
personal communications can be integrated as well, but lack the in‐print verification. This allows for a great degree of flexibility in data
handling, while maintaining accountability in terms of information accuracy and verification.

Conclusion
In conclusion, BrainSnail permits the display of information in an object/reference oriented manner. The individual source management 
feature allows for quick exchange of data between researchers while maintaining accountability with respect to the sources of information
and reference validation. The ease of data display makes BrainSnail useful for quickly grasping complex relationships and providing an 
overview of intricate interactions while preserving the detail that is available in the data layer. BrainSnail allows for a 
cross‐platform release (Mac and Linux) given demand. The software is available at 
www.martintelefont.net/BrainSnail.html. 
Work is underway to advance the natural language search engine feature as it allows greater processing speeds of entered
text passages.

This project was supported by NIH COBRE P20 RR15567. We thank Dr. Kenneth Renner for reviewing the
manuscript, David H. Arendt and Justin P. Smith for testing the application and Dr. Na Feng for conceptual support.

Citation:Telefont &amp; Asaithambi, Bioinformation 3(7): 289-290 (2009)

Composite of the input interface and the three layers of the internal information output are shown. (a) Screen shot
of the input text field. Each of the three layers, namely (b) anatomy, (c) pharmacology, and (d) reference‐centered
information, includes on the left side a picture bar which allows quick access to picture references associated with a selected
element.

